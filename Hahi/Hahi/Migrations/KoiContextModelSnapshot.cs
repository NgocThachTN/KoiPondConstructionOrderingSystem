// <auto-generated />
using System;
using Hahi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hahi.Migrations
{
    [DbContext(typeof(KoiContext))]
    partial class KoiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Hahi.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"), 1L, 1);

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("AccountId");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("Hahi.Models.ConstructionType", b =>
                {
                    b.Property<int>("ConstructionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ConstructionTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConstructionTypeId"), 1L, 1);

                    b.Property<string>("ConstructionName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ConstructionTypeId");

                    b.ToTable("ConstructionType", (string)null);
                });

            modelBuilder.Entity("Hahi.Models.Contract", b =>
                {
                    b.Property<int>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ContractID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractId"), 1L, 1);

                    b.Property<string>("ContractName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int")
                        .HasColumnName("RequestID");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ContractId");

                    b.HasIndex(new[] { "RequestId" }, "UQ__Contract__33A8519B462844DD")
                        .IsUnique()
                        .HasFilter("[RequestID] IS NOT NULL");

                    b.ToTable("Contract", (string)null);
                });

            modelBuilder.Entity("Hahi.Models.Design", b =>
                {
                    b.Property<int>("DesignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DesignID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DesignId"), 1L, 1);

                    b.Property<int?>("ConstructionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("ConstructionTypeID");

                    b.Property<string>("DesignName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Size")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("DesignId");

                    b.HasIndex("ConstructionTypeId");

                    b.ToTable("Design", (string)null);
                });

            modelBuilder.Entity("Hahi.Models.Maintenance", b =>
                {
                    b.Property<int>("MaintenanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaintenanceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaintenanceId"), 1L, 1);

                    b.Property<string>("MaintencaceName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("MaintenanceId");

                    b.ToTable("Maintenance", (string)null);
                });

            modelBuilder.Entity("Hahi.Models.MaintenanceRequest", b =>
                {
                    b.Property<int>("MaintenanceId")
                        .HasColumnType("int")
                        .HasColumnName("MaintenanceID");

                    b.Property<int>("RequestId")
                        .HasColumnType("int")
                        .HasColumnName("RequestID");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("MaintenanceId", "RequestId")
                        .HasName("PK__Maintena__553FC7ACE31E31CA");

                    b.HasIndex("RequestId");

                    b.ToTable("Maintenance_Request", (string)null);
                });

            modelBuilder.Entity("Hahi.Models.Request", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RequestID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("DesignId")
                        .HasColumnType("int")
                        .HasColumnName("DesignID");

                    b.Property<string>("RequestName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("SampleId")
                        .HasColumnType("int")
                        .HasColumnName("SampleID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("RequestId");

                    b.HasIndex("DesignId");

                    b.HasIndex("SampleId");

                    b.HasIndex("UserId");

                    b.ToTable("Request", (string)null);
                });

            modelBuilder.Entity("Hahi.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<string>("RoleName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Hahi.Models.Sample", b =>
                {
                    b.Property<int>("SampleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SampleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SampleId"), 1L, 1);

                    b.Property<int?>("ConstructionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("ConstructionTypeID");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<string>("SampleName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Size")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("SampleId");

                    b.HasIndex("ConstructionTypeId");

                    b.ToTable("Sample", (string)null);
                });

            modelBuilder.Entity("Hahi.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("AccountID");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "AccountId" }, "UQ__Users__349DA587852612D2")
                        .IsUnique()
                        .HasFilter("[AccountID] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Hahi.Models.Contract", b =>
                {
                    b.HasOne("Hahi.Models.Request", "Request")
                        .WithOne("Contract")
                        .HasForeignKey("Hahi.Models.Contract", "RequestId")
                        .HasConstraintName("FK__Contract__Reques__267ABA7A");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("Hahi.Models.Design", b =>
                {
                    b.HasOne("Hahi.Models.ConstructionType", "ConstructionType")
                        .WithMany("Designs")
                        .HasForeignKey("ConstructionTypeId")
                        .HasConstraintName("FK__Design__Construc__1DE57479");

                    b.Navigation("ConstructionType");
                });

            modelBuilder.Entity("Hahi.Models.MaintenanceRequest", b =>
                {
                    b.HasOne("Hahi.Models.Maintenance", "Maintenance")
                        .WithMany("MaintenanceRequests")
                        .HasForeignKey("MaintenanceId")
                        .IsRequired()
                        .HasConstraintName("FK__Maintenan__Maint__2B3F6F97");

                    b.HasOne("Hahi.Models.Request", "Request")
                        .WithMany("MaintenanceRequests")
                        .HasForeignKey("RequestId")
                        .IsRequired()
                        .HasConstraintName("FK__Maintenan__Reque__2C3393D0");

                    b.Navigation("Maintenance");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("Hahi.Models.Request", b =>
                {
                    b.HasOne("Hahi.Models.Design", "Design")
                        .WithMany("Requests")
                        .HasForeignKey("DesignId")
                        .HasConstraintName("FK_Request_Design");

                    b.HasOne("Hahi.Models.Sample", "Sample")
                        .WithMany("Requests")
                        .HasForeignKey("SampleId")
                        .HasConstraintName("FK_Request_Sample");

                    b.HasOne("Hahi.Models.User", "User")
                        .WithMany("Requests")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Request__UserID__20C1E124");

                    b.Navigation("Design");

                    b.Navigation("Sample");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hahi.Models.Sample", b =>
                {
                    b.HasOne("Hahi.Models.ConstructionType", "ConstructionType")
                        .WithMany("Samples")
                        .HasForeignKey("ConstructionTypeId")
                        .HasConstraintName("FK__Sample__Construc__1B0907CE");

                    b.Navigation("ConstructionType");
                });

            modelBuilder.Entity("Hahi.Models.User", b =>
                {
                    b.HasOne("Hahi.Models.Account", "Account")
                        .WithOne("User")
                        .HasForeignKey("Hahi.Models.User", "AccountId")
                        .HasConstraintName("FK__Users__AccountID__15502E78");

                    b.HasOne("Hahi.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__Users__RoleID__164452B1");

                    b.Navigation("Account");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Hahi.Models.Account", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("Hahi.Models.ConstructionType", b =>
                {
                    b.Navigation("Designs");

                    b.Navigation("Samples");
                });

            modelBuilder.Entity("Hahi.Models.Design", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("Hahi.Models.Maintenance", b =>
                {
                    b.Navigation("MaintenanceRequests");
                });

            modelBuilder.Entity("Hahi.Models.Request", b =>
                {
                    b.Navigation("Contract");

                    b.Navigation("MaintenanceRequests");
                });

            modelBuilder.Entity("Hahi.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Hahi.Models.Sample", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("Hahi.Models.User", b =>
                {
                    b.Navigation("Requests");
                });
#pragma warning restore 612, 618
        }
    }
}
